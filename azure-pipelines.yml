# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

parameters:
- name: image
  displayName: Agent image
  type: string
  default: windows-latest
  values:
  - windows-2019
  - windows-2022
  - windows-latest
- name: deploy
  displayName: Deploy website
  type: boolean
  default: false
- name: archive
  displayName: Archive website
  type: boolean
  default: false

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: buildAndDeploy
  ${{ if parameters.deploy }}:
    displayName: Build & deploy website
  ${{ else }}:
    displayName: Build website

  pool:
    vmImage: '${{ parameters.image }}'

  steps:
  - task: NuGetToolInstaller@1
    displayName: Install NuGet

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    displayName: Build website
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    displayName: Test website locally
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - ${{ if parameters.deploy }}:
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy website
      inputs:
        azureSubscription: my-azure-subscription
        appType: 'webApp'
        DeploymentType: "webDeploy"
        Package: $(Pipeline.Workspace)/**/*.zip
        WebAppName: 'website20231026154549'

  - ${{ if parameters.archive }}:
    - task: ArchiveFiles@2
      displayName: Create website archive
      inputs:
        rootFolderOrFile: '$(build.artifactStagingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: Publish archive as artifact
      artifact: $(terraformArtifactPrefix)$(System.PlanId)